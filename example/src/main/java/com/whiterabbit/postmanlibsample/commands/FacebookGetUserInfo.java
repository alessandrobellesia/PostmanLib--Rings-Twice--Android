package com.whiterabbit.postmanlibsample.commands;

import android.content.Context;
import android.os.Parcel;
import android.util.Log;
import com.whiterabbit.postman.commands.RequestExecutor;
import com.whiterabbit.postman.commands.RestServerRequest;
import com.whiterabbit.postman.exceptions.ResultParseException;
import com.whiterabbit.postmanlibsample.StoreUtils;
import org.codehaus.jackson.JsonNode;
import org.codehaus.jackson.map.ObjectMapper;
import org.scribe.exceptions.OAuthException;
import org.scribe.model.OAuthRequest;
import org.scribe.model.Response;
import org.scribe.model.Verb;

import java.io.IOException;

/**
 * Created with IntelliJ IDEA.
 * User: fedepaol
 * Date: 12/18/12
 * Time: 12:41 AM
 */
public class FacebookGetUserInfo implements RestServerRequest {
    private final String mId;

    public FacebookGetUserInfo(String id) {
        mId = id;
    }

    @Override
    public String getOAuthSigner() {
        return "Facebook";
    }

    @Override
    public String getUrl() {
        return "https://graph.facebook.com/" + mId;
    }

    @Override
    public Verb getVerb() {
        return Verb.GET;
    }

    @Override
    public void onHttpResult(Response result, int statusCode, RequestExecutor executor, Context context) throws ResultParseException {
        ObjectMapper mapper = new ObjectMapper();
        try {
            JsonNode root = mapper.readTree(result.getBody());
            String name = root.path("first_name").getTextValue();
            String gender = root.path("gender").getTextValue();
            StoreUtils.setFbProperties(name, gender, context);

        } catch (IOException e) {
            throw new ResultParseException("Failed to parse response");
        }

    }

    @Override
    public void onHttpError(int statusCode, RequestExecutor executor, Context context) {
        Log.e("Facebook", "Http error " + statusCode);
    }

    @Override
    public void onOAuthExceptionThrown(OAuthException exception) {
        //TODO Autogenerated
    }

    @Override
    public void addParamsToRequest(OAuthRequest request) {
        request.addQuerystringParameter("fields", "gender,first_name,hometown");
    }

    @Override
    public int describeContents() {
        return 0;  //TODO Autogenerated
    }

    @Override
    public void writeToParcel(Parcel parcel, int i) {
        parcel.writeString(mId);
    }

    public static final Creator<FacebookGetUserInfo> CREATOR
            = new Creator<FacebookGetUserInfo>() {
        public FacebookGetUserInfo createFromParcel(Parcel in) {
            return new FacebookGetUserInfo(in);
        }

        public FacebookGetUserInfo[] newArray(int size) {
            return new FacebookGetUserInfo[size];
        }
    };

    public FacebookGetUserInfo(Parcel in) {
        mId = in.readString();
    }

}
