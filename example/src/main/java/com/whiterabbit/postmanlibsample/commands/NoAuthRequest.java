package com.whiterabbit.postmanlibsample.commands;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Parcel;
import com.whiterabbit.postman.commands.RequestExecutor;
import com.whiterabbit.postman.commands.RestServerRequest;
import com.whiterabbit.postman.exceptions.ResultParseException;
import org.scribe.exceptions.OAuthException;
import org.scribe.model.OAuthRequest;
import org.scribe.model.Response;
import org.scribe.model.Verb;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

/**
 * Created with IntelliJ IDEA.
 * User: fedepaol
 * Date: 12/18/12
 * Time: 12:41 AM
 */
public class NoAuthRequest implements RestServerRequest {
    private final String mUrl;
    private final String mName;

    public NoAuthRequest(String url, String name) {
        mUrl = url;
        mName = name;
    }

    @Override
    public String getOAuthSigner() {
        return null;
    }

    @Override
    public String getUrl() {
        return mUrl;
    }

    @Override
    public Verb getVerb() {
        return Verb.GET;
    }

    @Override
    public void onHttpResult(Response result, int statusCode, RequestExecutor executor, Context context) throws ResultParseException {
        Bitmap b = BitmapFactory.decodeStream(result.getStream());
        File path = context.getExternalFilesDir(null);
        File target = new File(path, mName);
        FileOutputStream out = null;
        try {
            out = new FileOutputStream(target);
            b.compress(Bitmap.CompressFormat.PNG, 90, out);
            out.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
        } catch (IOException e) {
            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
        }

    }

    @Override
    public void onHttpError(int statusCode, RequestExecutor executor, Context context) {
        //TODO Autogenerated
    }

    @Override
    public void onOAuthExceptionThrown(OAuthException exception) {
        //TODO Autogenerated
    }

    @Override
    public void addParamsToRequest(OAuthRequest request) {
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel parcel, int i) {
        parcel.writeString(mUrl);
        parcel.writeString(mName);
    }

    public static final Creator<NoAuthRequest> CREATOR
            = new Creator<NoAuthRequest>() {
        public NoAuthRequest createFromParcel(Parcel in) {
            return new NoAuthRequest(in);
        }

        public NoAuthRequest[] newArray(int size) {
            return new NoAuthRequest[size];
        }
    };

    public NoAuthRequest(Parcel in) {
        mUrl = in.readString();
        mName = in.readString();
    }

}
